Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ДенежныеСредства.Записывать = Истина;
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
	Движение.БанковскийСчетКасса = РасчетныйСчет;
	Движение.Сумма = СуммаДокумента;
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ПереводНаДругойСчетПредприятия") Тогда
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
		Движение.БанковскийСчетКасса = РасчетныйСчетИсточник;
		Движение.Сумма = СуммаДокумента;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетныйСчет", РасчетныйСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	Запрос.Текст =
	"ВЫБРАТЬ
	|    ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК РасчетныйСчет,
	|    -ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|    РегистрНакопления.ДенежныеСредства.Остатки(
	|            &МоментВремени,
	|            БанковскийСчетКасса = &РасчетныйСчет
	|                И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)) КАК ДенежныеСредстваОстатки
	|ГДЕ
	|    ДенежныеСредстваОстатки.СуммаОстаток < 0";	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("На счете ""%1"" недостаточно денежных средств для расхода в размере %2", Выборка.РасчетныйСчет, Выборка.Сумма);
		Сообщение.Сообщить();
	КонецЕсли;
	Движения.Хозрасчетный.Записывать = Истина;
	Если ВидОперации <> Перечисления.ВидыОперацийСписанияСРасчетногоСчета.СнятиеНаличныхВКассу Тогда        
		АналитикаПроводки = ПолучитьАналитикуПроводки();        
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.СчетДт = АналитикаПроводки.СчетДебета;
		Движение.СчетКт = АналитикаПроводки.СчетКредита;
		Движение.Период = Дата;
		Движение.Сумма = СуммаДокумента;
		Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);        
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю;
		Получатель = ДанныеЗаполнения.Клиент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТоваровИМатериалов") Тогда 
		ВидОперации = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
		Получатель = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
		Получатель = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Не ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьАналитикуПроводки()   
	ОплатаПоставщику = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
	ВозвратПокупателю = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю;
	ПеречислениеПодотчетномуЛицу = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеПодотчетномуЛицу;
	ПеречислениеЗаработнойПлаты = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеЗаработнойПлаты;
	ПереводНаДругойСчетПредприятия = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПереводНаДругойСчетПредприятия;
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	СтруктураАналитики.Вставить("СубконтоКредит", РасчетныйСчет);
	Если ВидОперации = ОплатаПоставщику Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику с расчетного счета");
	ИначеЕсли ВидОперации = ВозвратПокупателю Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);    
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат средств покупателю с расчетного счета");
	ИначеЕсли ВидОперации = ПеречислениеПодотчетномуЛицу Тогда 
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Перечисление подотченику с расчетного счета");
	ИначеЕсли ВидОперации = ПеречислениеЗаработнойПлаты Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Выплата заработной платы на счет сотрудника");        
	КонецЕсли;
	Если ВидОперации = ПереводНаДругойСчетПредприятия Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СписаниеСРасчетногоСчета.РасчетныйСчетИсточник КАК РасчетныйСчетИсточник
		               |ИЗ
		               |	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
		               |ГДЕ
		               |	СписаниеСРасчетногоСчета.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СтруктураАналитики = Новый Структура;
    		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
    		СтруктураАналитики.Вставить("СубконтоКредит", Выборка.РасчетныйСчетИсточник);
			СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
			СтруктураАналитики.Вставить("СубконтоДебет", РасчетныйСчет);
			СтруктураАналитики.Вставить("СодержаниеОперации", "Переводы между расчетными счетами организации");
		КонецЕсли;
	КонецЕсли;
	Возврат СтруктураАналитики;   
КонецФункции

Функция ПолучитьДанныеПоРеализацииТоваровИУслуг(ДанныеЗаполнения)
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);    
	Запрос.Текст =
	"ВЫБРАТЬ
	|    РеализацияТоваровИУслуг.Клиент КАК Получатель,
	|    РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|    РеализацияТоваровИУслуг.Ссылка КАК ДокументОснование,
	|    ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю) КАК ВидОперации
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|    РеализацияТоваровИУслуг.Ссылка = &Ссылка";   
	Выборка =  Запрос.Выполнить().Выбрать();
	Выборка.Следующий();    
	Возврат Выборка;	
КонецФункции

Функция ПолучитьДанныеПоПоступлениюТоваровИМатериалов(ДанныеЗаполнения)
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|    ПоступлениеТоваровИМатериалов.Поставщик КАК Получатель,
	|    ПоступлениеТоваровИМатериалов.ДоговорПоставщика КАК ДоговорКонтрагента,
	|    ПоступлениеТоваровИМатериалов.СуммаДокумента КАК СуммаДокумента,
	|    ПоступлениеТоваровИМатериалов.Ссылка КАК ДокументОснование,
	|    ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации
	|ИЗ
	|    Документ.ПоступлениеТоваровИМатериалов КАК ПоступлениеТоваровИМатериалов
	|ГДЕ
	|    ПоступлениеТоваровИМатериалов.Ссылка = &Ссылка";    
	Выборка =  Запрос.Выполнить().Выбрать();
	Выборка.Следующий();     
	Возврат Выборка;    
КонецФункции

Функция ПолучитьДанныеПоПоступлениюУслуг(ДанныеЗаполнения)
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|    ПоступлениеУслуг.Поставщик КАК Получатель,
	|    ПоступлениеУслуг.ДоговорПоставщика КАК ДоговорКонтрагента,
	|    ПоступлениеУслуг.СуммаДокумента КАК СуммаДокумента,
	|    ПоступлениеУслуг.Ссылка КАК ДокументОснование,
	|    ЗНАЧЕНИЕ(Перечисление.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику) КАК ВидОперации
	|ИЗ
	|    Документ.ПоступлениеУслуг КАК ПоступлениеУслуг
	|ГДЕ
	|    ПоступлениеУслуг.Ссылка = &Ссылка";    
	Выборка =  Запрос.Выполнить().Выбрать();
	Выборка.Следующий();     
	Возврат Выборка;   
КонецФункции