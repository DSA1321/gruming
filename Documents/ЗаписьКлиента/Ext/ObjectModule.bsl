Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ЗаказыКлиентов.Записывать = Истина;	
	Движение = Движения.ЗаказыКлиентов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.ЗаписьКлиента = Ссылка;
	Движение.Сумма = Услуги.Итог("Стоимость");
КонецПроцедуры	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Не ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Если ЗначениеЗаполнено(Ссылка) И УслугаОказана = Ложь Тогда
		ПроверитьОказаниеУслуг();
	КонецЕсли;
	ДлительностьУслуг = РассчитатьДатуОкончанияЗаписи();
	Если ДлительностьУслуг = 0 Тогда
		ДлительностьУслуг = 60;
	КонецЕсли;
	ДатаОкончанияЗаписи = ДатаЗаписи + ДлительностьУслуг*60;
КонецПроцедуры

Процедура ПроверитьОказаниеУслуг()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровИУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.ДокументОснование = &ДокументОснование
	|	И РеализацияТоваровИУслуг.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслуг.Ссылка";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		УслугаОказана = Истина;
	КонецЕсли;
КонецПроцедуры

Функция РассчитатьДатуОкончанияЗаписи()
	ТЧУслуги = Услуги.Выгрузить(, "Номенклатура");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЧУслуги", ТЧУслуги);
	Запрос.Текст = "ВЫБРАТЬ
	|    ТЧУслуги.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|    &ТЧУслуги КАК ТЧУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    СУММА(Ном.ДлительностьУслуги) КАК ДлительностьУслуги
	|ИЗ
	|    ВТ_Номенклатура КАК ВТ_Номенклатура
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
	|        ПО ВТ_Номенклатура.Номенклатура = Ном.Ссылка";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ДлительностьУслуги;
КонецФункции
