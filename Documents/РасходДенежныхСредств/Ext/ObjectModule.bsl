Процедура ОбработкаПроведения(Отказ, Режим)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходДенежныхСредств.Дата КАК Период,
	               |	РасходДенежныхСредств.Касса КАК БанковскийСчетКасса,
	               |	РасходДенежныхСредств.СуммаДокумента КАК Сумма,
	               |	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	               |	РасходДенежныхСредств.КассаИсточник КАК КассаИсточник
	               |ИЗ
	               |	Документ.РасходДенежныхСредств КАК РасходДенежныхСредств
	               |ГДЕ
	               |	РасходДенежныхСредств.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасходДенежныхСредств.Дата,
	               |	РасходДенежныхСредств.Касса,
	               |	РасходДенежныхСредств.СуммаДокумента,
	               |	РасходДенежныхСредств.КассаИсточник";
	Выборка = Запрос.Выполнить().Выбрать();
	Если НЕ ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходаДенег.ПередачаВДругуюКассу") Тогда
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ДенежныеСредства.ДобавитьРасход();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		КонецЦикла;
		Движения.ДенежныеСредства.Записывать = Истина;
		Движения.ДенежныеСредства.БлокироватьДляИзменения=Истина;
		Движения.Записать();
	КонецЕсли;
	Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходаДенег.ПередачаВДругуюКассу") Тогда
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ДенежныеСредства.ДобавитьРасход();
			Движение.Период = Выборка.Период;
			Движение.ТипДенежныхСредств = Выборка.ТипДенежныхСредств;
			Движение.БанковскийСчетКасса = Выборка.КассаИсточник;
			Движение.Сумма = Выборка.Сумма;
			Движения.ДенежныеСредства.Записывать = Истина;
			Движения.ДенежныеСредства.БлокироватьДляИзменения=Истина;
			Движения.Записать();
		КонецЦикла;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Касса", Касса);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Запрос.Текст = "ВЫБРАТЬ
	|	ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК Касса,
	|	-ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредства.Остатки КАК ДенежныеСредстваОстатки
	|ГДЕ
	|	ДенежныеСредстваОстатки.СуммаОстаток < 0";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Отказ = Истина;
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("По кассе ""%1"" недостаточно денежных средств для расхода в размере %2", Выборка.Касса, Выборка.Сумма);
		Сообщение.Сообщить();
	КонецЕсли;
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	Движения.Хозрасчетный.Записывать = Истина;
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
	Движения.Записать();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорПоставщика;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Получатель = ДанныеЗаполнения.Поставщик;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступленияТоваровИМатериалов") Тогда
		ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорПоставщика;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Получатель = ДанныеЗаполнения.Поставщик;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ВозвратДенегПокупателю;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Получатель = ДанныеЗаполнения.Клиент;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Не ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьАналитикуПроводки()    
    ОплатаПоставщику = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
    ВозвратДенегПокупателю = Перечисления.ВидыОперацийРасходаДенег.ВозвратДенегПокупателю;
    ВыдачаДенегПодотчетнику = Перечисления.ВидыОперацийРасходаДенег.ВыдачаДенегПодотчетнику;
    ВзносНаличнымиВБанк = Перечисления.ВидыОперацийРасходаДенег.ВзносНаличнымиВБанк;
	ПередачаВДругуюКассу = Перечисления.ВидыОперацийРасходаДенег.ПередачаВДругуюКассу;
    СтруктураАналитики = Новый Структура;
    СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.Касса);
    СтруктураАналитики.Вставить("СубконтоКредит", Касса);
    Если ВидОперации = ОплатаПоставщику Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику наличными из кассы");
    ИначеЕсли ВидОперации = ВозвратДенегПокупателю Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);    
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат покупателю наличными из кассы");
    ИначеЕсли ВидОперации = ВыдачаДенегПодотчетнику Тогда
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
        СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Выдача в подотчет наличных из кассы");
    ИначеЕсли ВидОперации = ВзносНаличнымиВБанк Тогда 
        СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
        СтруктураАналитики.Вставить("СубконтоДебет", РасчетныйСчет);
        СтруктураАналитики.Вставить("СодержаниеОперации", "Взнос наличными в банк");
	КонецЕсли;
	Если ВидОперации = ПередачаВДругуюКассу Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходДенежныхСредств.КассаИсточник КАК КассаИсточник
		               |ИЗ
		               |	Документ.РасходДенежныхСредств КАК РасходДенежныхСредств
		               |ГДЕ
		               |	РасходДенежныхСредств.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СтруктураАналитики = Новый Структура;
    		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.Касса);
    		СтруктураАналитики.Вставить("СубконтоКредит", Выборка.КассаИсточник);
			СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.Касса);
			СтруктураАналитики.Вставить("СубконтоДебет", Касса);
			СтруктураАналитики.Вставить("СодержаниеОперации", "Перемещение наличных денег между кассами");
		КонецЕсли;
    КонецЕсли;
    Возврат СтруктураАналитики;   
КонецФункции