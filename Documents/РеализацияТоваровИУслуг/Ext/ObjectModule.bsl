Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движения.Хозрасчетный.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записать();
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	Блокировка.Заблокировать();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслуг.Склад КАК Склад,
	               |	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	               |	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	               |	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма,
	               |	NULL КАК Стоимость
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	               |		ПО РеализацияТоваровИУслугТовары.Ссылка = РеализацияТоваровИУслуг.Ссылка
	               |ГДЕ
	               |	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугТовары.Номенклатура,
	               |	РеализацияТоваровИУслуг.Склад
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	РеализацияТоваровИУслугУслуги.Номенклатура,
	               |	NULL,
	               |	NULL,
	               |	СУММА(РеализацияТоваровИУслугУслуги.Стоимость)
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	               |ГДЕ
	               |	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугУслуги.Номенклатура
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатур.Услуга)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЭтоТовар,
	               |	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	               |	ВТ_Товары.Количество КАК КоличествоВДокументе,
	               |	ВТ_Товары.Сумма КАК СуммаВДокументе,
	               |	ВТ_Товары.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	               |	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	ВТ_Товары.Стоимость КАК Стоимость,
	               |	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				&МоментВремени,
	               |				(Номенклатура, Склад) В
	               |					(ВЫБРАТЬ
	               |						ВТ_Товары.Номенклатура,
	               |						ВТ_Товары.Склад
	               |					ИЗ
	               |						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СрокГодности
	               |ИТОГИ
	               |	МАКСИМУМ(КоличествоВДокументе),
	               |	МАКСИМУМ(СуммаВДокументе),
	               |	СУММА(КоличествоОстаток),
	               |	МАКСИМУМ(Стоимость)
	               |ПО
	               |	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеКонстанты = Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить();
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			СтоимостьОбщая = 0;
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			Если Превышение > 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1"" в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
				Если ЗначениеКонстанты Тогда
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл
				Списываем = Мин(ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
				Движение.Склад = ВыборкаДетальные.Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем;
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда
					СуммаСписания = ВыборкаДетальные.СуммаОстаток;
				Иначе
					СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;
				Движение.Сумма = СуммаСписания;
				ОсталосьСписать = ОсталосьСписать - Списываем;
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
				Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаДетальные.Номенклатура;
				Движение.Период = Дата;
				Движение.Сумма = СуммаСписания;
				Движение.Содержание = "Списана себестоимость товарно-материальных ценностей"
			КонецЦикла;
			Если ОсталосьСписать > 0 Тогда
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
				Движение.Склад = Склад;
				Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
				Движение.Сумма = Товары.Итог("Сумма") - СуммаСписания;
			КонецЕсли;
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
		КонецЕсли;
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Сотрудники = Сотрудник;
		Движение.Клиент = Клиент;
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		Иначе Движение.Сумма = ВыборкаНоменклатура.Стоимость;
		КонецЕсли;
	КонецЦикла;
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Движение = Движения.ЗаказыКлиентов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.ЗаписьКлиента = ДокументОснование;
		Движение.Сумма = Услуги.Итог("Стоимость");
	КонецЕсли;
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Клиент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Стоимость = ТекСтрокаУслуги.Стоимость;
			НоваяСтрока.Номенклатура = ТекСтрокаУслуги.Номенклатура;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Не ЗначениеЗаполнено(АвторДокумента) Тогда
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	СуммаДокумента = Услуги.Итог("Стоимость") + Товары.Итог("Сумма");
	Если ЗначениеЗаполнено(Ссылка)
		И ПризнакОплаты <> Перечисления.ОплатаДокумента.ПолностьюОплачен Тогда
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Ссылка);
		ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
	КонецЕсли;
КонецПроцедуры
